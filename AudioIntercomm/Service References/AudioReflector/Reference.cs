//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AudioIntercomm.AudioReflector {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service.audio.org", ConfigurationName="AudioReflector.AudioReflect")]
    public interface AudioReflect {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="checkCredantialsReturn")]
        bool checkCredantials(string username, string password, int random_access);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="checkCredantialsReturn")]
        System.Threading.Tasks.Task<bool> checkCredantialsAsync(string username, string password, int random_access);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="messageAvailableReturn")]
        AudioIntercomm.AudioReflector.AudioInformation messageAvailable(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="messageAvailableReturn")]
        System.Threading.Tasks.Task<AudioIntercomm.AudioReflector.AudioInformation> messageAvailableAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getVersionReturn")]
        double getVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getVersionReturn")]
        System.Threading.Tasks.Task<double> getVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="putAudioReturn")]
        bool putAudio(string username, string password, int length, int id, string data, short bitmask, bool useDTS, int type, bool encryption);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="putAudioReturn")]
        System.Threading.Tasks.Task<bool> putAudioAsync(string username, string password, int length, int id, string data, short bitmask, bool useDTS, int type, bool encryption);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="endAudioReturn")]
        bool endAudio(string username, string password, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="endAudioReturn")]
        System.Threading.Tasks.Task<bool> endAudioAsync(string username, string password, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPacketLengthReturn")]
        int getPacketLength(string username, string password, int id, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPacketLengthReturn")]
        System.Threading.Tasks.Task<int> getPacketLengthAsync(string username, string password, int id, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="helloReturn")]
        string hello();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="helloReturn")]
        System.Threading.Tasks.Task<string> helloAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void changeOnlineStatus(string Username, string password, int state);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task changeOnlineStatusAsync(string Username, string password, int state);
        
        // CODEGEN: Parameter 'tolist' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="createNewStreamReturn")]
        AudioIntercomm.AudioReflector.createNewStreamResponse createNewStream(AudioIntercomm.AudioReflector.createNewStreamRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<AudioIntercomm.AudioReflector.createNewStreamResponse> createNewStreamAsync(AudioIntercomm.AudioReflector.createNewStreamRequest request);
        
        // CODEGEN: Parameter 'getAudioReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getAudioReturn")]
        AudioIntercomm.AudioReflector.getAudioResponse getAudio(AudioIntercomm.AudioReflector.getAudioRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<AudioIntercomm.AudioReflector.getAudioResponse> getAudioAsync(AudioIntercomm.AudioReflector.getAudioRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3163.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.audio.org")]
    public partial class AudioInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dataField;
        
        private bool containsDataField;
        
        private string usernameField;
        
        private string toField;
        
        private int idField;
        
        private int countField;
        
        private int lengthField;
        
        private short bitmaskField;
        
        private bool dTSField;
        
        private int typeField;
        
        private int encryptKeyField;
        
        private bool encryptOnField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("Data");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool containsData {
            get {
                return this.containsDataField;
            }
            set {
                this.containsDataField = value;
                this.RaisePropertyChanged("containsData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
                this.RaisePropertyChanged("count");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
                this.RaisePropertyChanged("length");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public short bitmask {
            get {
                return this.bitmaskField;
            }
            set {
                this.bitmaskField = value;
                this.RaisePropertyChanged("bitmask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool DTS {
            get {
                return this.dTSField;
            }
            set {
                this.dTSField = value;
                this.RaisePropertyChanged("DTS");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public int encryptKey {
            get {
                return this.encryptKeyField;
            }
            set {
                this.encryptKeyField = value;
                this.RaisePropertyChanged("encryptKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool encryptOn {
            get {
                return this.encryptOnField;
            }
            set {
                this.encryptOnField = value;
                this.RaisePropertyChanged("encryptOn");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createNewStream", WrapperNamespace="http://service.audio.org", IsWrapped=true)]
    public partial class createNewStreamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.audio.org", Order=0)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.audio.org", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.audio.org", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("tolist")]
        public string[] tolist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.audio.org", Order=3)]
        public int type;
        
        public createNewStreamRequest() {
        }
        
        public createNewStreamRequest(string Username, string password, string[] tolist, int type) {
            this.Username = Username;
            this.password = password;
            this.tolist = tolist;
            this.type = type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createNewStreamResponse", WrapperNamespace="http://service.audio.org", IsWrapped=true)]
    public partial class createNewStreamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.audio.org", Order=0)]
        public int createNewStreamReturn;
        
        public createNewStreamResponse() {
        }
        
        public createNewStreamResponse(int createNewStreamReturn) {
            this.createNewStreamReturn = createNewStreamReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAudio", WrapperNamespace="http://service.audio.org", IsWrapped=true)]
    public partial class getAudioRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.audio.org", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.audio.org", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.audio.org", Order=2)]
        public int id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.audio.org", Order=3)]
        public int count;
        
        public getAudioRequest() {
        }
        
        public getAudioRequest(string username, string password, int id, int count) {
            this.username = username;
            this.password = password;
            this.id = id;
            this.count = count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAudioResponse", WrapperNamespace="http://service.audio.org", IsWrapped=true)]
    public partial class getAudioResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.audio.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getAudioReturn")]
        public AudioIntercomm.AudioReflector.AudioInformation[] getAudioReturn;
        
        public getAudioResponse() {
        }
        
        public getAudioResponse(AudioIntercomm.AudioReflector.AudioInformation[] getAudioReturn) {
            this.getAudioReturn = getAudioReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AudioReflectChannel : AudioIntercomm.AudioReflector.AudioReflect, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AudioReflectClient : System.ServiceModel.ClientBase<AudioIntercomm.AudioReflector.AudioReflect>, AudioIntercomm.AudioReflector.AudioReflect {
        
        public AudioReflectClient() {
        }
        
        public AudioReflectClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AudioReflectClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AudioReflectClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AudioReflectClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool checkCredantials(string username, string password, int random_access) {
            return base.Channel.checkCredantials(username, password, random_access);
        }
        
        public System.Threading.Tasks.Task<bool> checkCredantialsAsync(string username, string password, int random_access) {
            return base.Channel.checkCredantialsAsync(username, password, random_access);
        }
        
        public AudioIntercomm.AudioReflector.AudioInformation messageAvailable(string username, string password) {
            return base.Channel.messageAvailable(username, password);
        }
        
        public System.Threading.Tasks.Task<AudioIntercomm.AudioReflector.AudioInformation> messageAvailableAsync(string username, string password) {
            return base.Channel.messageAvailableAsync(username, password);
        }
        
        public double getVersion() {
            return base.Channel.getVersion();
        }
        
        public System.Threading.Tasks.Task<double> getVersionAsync() {
            return base.Channel.getVersionAsync();
        }
        
        public bool putAudio(string username, string password, int length, int id, string data, short bitmask, bool useDTS, int type, bool encryption) {
            return base.Channel.putAudio(username, password, length, id, data, bitmask, useDTS, type, encryption);
        }
        
        public System.Threading.Tasks.Task<bool> putAudioAsync(string username, string password, int length, int id, string data, short bitmask, bool useDTS, int type, bool encryption) {
            return base.Channel.putAudioAsync(username, password, length, id, data, bitmask, useDTS, type, encryption);
        }
        
        public bool endAudio(string username, string password, int id) {
            return base.Channel.endAudio(username, password, id);
        }
        
        public System.Threading.Tasks.Task<bool> endAudioAsync(string username, string password, int id) {
            return base.Channel.endAudioAsync(username, password, id);
        }
        
        public int getPacketLength(string username, string password, int id, int count) {
            return base.Channel.getPacketLength(username, password, id, count);
        }
        
        public System.Threading.Tasks.Task<int> getPacketLengthAsync(string username, string password, int id, int count) {
            return base.Channel.getPacketLengthAsync(username, password, id, count);
        }
        
        public string hello() {
            return base.Channel.hello();
        }
        
        public System.Threading.Tasks.Task<string> helloAsync() {
            return base.Channel.helloAsync();
        }
        
        public void changeOnlineStatus(string Username, string password, int state) {
            base.Channel.changeOnlineStatus(Username, password, state);
        }
        
        public System.Threading.Tasks.Task changeOnlineStatusAsync(string Username, string password, int state) {
            return base.Channel.changeOnlineStatusAsync(Username, password, state);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AudioIntercomm.AudioReflector.createNewStreamResponse AudioIntercomm.AudioReflector.AudioReflect.createNewStream(AudioIntercomm.AudioReflector.createNewStreamRequest request) {
            return base.Channel.createNewStream(request);
        }
        
        public int createNewStream(string Username, string password, string[] tolist, int type) {
            AudioIntercomm.AudioReflector.createNewStreamRequest inValue = new AudioIntercomm.AudioReflector.createNewStreamRequest();
            inValue.Username = Username;
            inValue.password = password;
            inValue.tolist = tolist;
            inValue.type = type;
            AudioIntercomm.AudioReflector.createNewStreamResponse retVal = ((AudioIntercomm.AudioReflector.AudioReflect)(this)).createNewStream(inValue);
            return retVal.createNewStreamReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AudioIntercomm.AudioReflector.createNewStreamResponse> AudioIntercomm.AudioReflector.AudioReflect.createNewStreamAsync(AudioIntercomm.AudioReflector.createNewStreamRequest request) {
            return base.Channel.createNewStreamAsync(request);
        }
        
        public System.Threading.Tasks.Task<AudioIntercomm.AudioReflector.createNewStreamResponse> createNewStreamAsync(string Username, string password, string[] tolist, int type) {
            AudioIntercomm.AudioReflector.createNewStreamRequest inValue = new AudioIntercomm.AudioReflector.createNewStreamRequest();
            inValue.Username = Username;
            inValue.password = password;
            inValue.tolist = tolist;
            inValue.type = type;
            return ((AudioIntercomm.AudioReflector.AudioReflect)(this)).createNewStreamAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AudioIntercomm.AudioReflector.getAudioResponse AudioIntercomm.AudioReflector.AudioReflect.getAudio(AudioIntercomm.AudioReflector.getAudioRequest request) {
            return base.Channel.getAudio(request);
        }
        
        public AudioIntercomm.AudioReflector.AudioInformation[] getAudio(string username, string password, int id, int count) {
            AudioIntercomm.AudioReflector.getAudioRequest inValue = new AudioIntercomm.AudioReflector.getAudioRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.id = id;
            inValue.count = count;
            AudioIntercomm.AudioReflector.getAudioResponse retVal = ((AudioIntercomm.AudioReflector.AudioReflect)(this)).getAudio(inValue);
            return retVal.getAudioReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AudioIntercomm.AudioReflector.getAudioResponse> AudioIntercomm.AudioReflector.AudioReflect.getAudioAsync(AudioIntercomm.AudioReflector.getAudioRequest request) {
            return base.Channel.getAudioAsync(request);
        }
        
        public System.Threading.Tasks.Task<AudioIntercomm.AudioReflector.getAudioResponse> getAudioAsync(string username, string password, int id, int count) {
            AudioIntercomm.AudioReflector.getAudioRequest inValue = new AudioIntercomm.AudioReflector.getAudioRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.id = id;
            inValue.count = count;
            return ((AudioIntercomm.AudioReflector.AudioReflect)(this)).getAudioAsync(inValue);
        }
    }
}
